<% content_for :title, "TaskMaster-Calendar" %>

<%= stylesheet_link_tag "https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.css" %>
<%= javascript_include_tag "https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js" %>
<%= javascript_include_tag "https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js" %>

<div class="container-fluid py-4 px-3 px-md-5">
  <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-3">
    <%= link_to "← Back to Dashboard", dashboard_index_path, class: "btn btn-outline-secondary mb-3 mb-md-0" %>
    <h3 class="fw-bold mb-0"><i class="bi bi-calendar3-event me-2"></i> Task Calendar</h3>
  </div>

  <div id="calendar" class="shadow rounded overflow-hidden bg-white p-2 p-md-4" style="min-height: 600px;"></div>

  <div class="mt-4 small text-muted d-flex flex-wrap gap-2">
    <span class="badge bg-success">Completed</span>
    <span class="badge bg-warning text-dark">In Progress</span>
    <span class="badge text-white" style="background-color: #6f42c1;">Not Started</span>
    <span class="badge bg-info text-dark">🔔 Reminder</span>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const calendarEl = document.getElementById("calendar");
    if (!calendarEl) return;

    const calendar = new FullCalendar.Calendar(calendarEl, {
      initialView: 'dayGridMonth',
      themeSystem: 'bootstrap5',
      headerToolbar: {
        left: 'prev,next today',
        center: 'title',
        right: 'dayGridMonth,timeGridWeek,listWeek'
      },
      aspectRatio: window.innerWidth < 768 ? 0.8 : 1.5,
      contentHeight: 'auto',
      eventDisplay: 'block',
      events: <%= raw(
        @calendar_tasks.flat_map do |task|
          task_events = []

          status_color = case task.status.to_s.downcase
                         when "completed" then "#198754"
                         when "in progress" then "#ffc107"
                         when "not started" then "#6f42c1"
                         else "#0d6efd"
                         end

          task_events << {
            title: "#{task.title} [#{task.status}]",
            start: task.due_date,
            url: task_path(task),
            color: status_color,
            extendedProps: {
              description: task.description || "",
              status: task.status || "Not Set",
              priority: task.priority || "N/A"
            }
          }

          if task.reminder_at.present?
            task_events << {
              title: "🔔 Reminder: #{task.title}",
              start: task.reminder_at,
              url: task_path(task),
              color: "#0dcaf0",
              extendedProps: {
                description: "Reminder set for this task.",
                status: "Reminder",
                priority: task.priority || "N/A"
              }
            }
          end

          task_events
        end.to_json
      ) %>,

      eventDidMount: function (info) {
        const tooltipContent = `
          <strong>${info.event.title}</strong><br/>
          <small>Status: ${info.event.extendedProps.status}</small><br/>
          <small>Priority: ${info.event.extendedProps.priority}</small><br/>
          <small>${info.event.extendedProps.description}</small>
        `;

        new bootstrap.Tooltip(info.el, {
          title: tooltipContent,
          placement: 'top',
          html: true,
          trigger: 'hover',
          container: 'body'
        });
      }
    });

    calendar.render();
  });
</script>
